====================================================

AUTHOR:

Luis Guzman

Lab3: Catcher

Found sample code here:
http://www.cs.kent.edu/~farrell/sp/lectures/signals/catch-ctrl-c.c

====================================================

DESCRIPTION:
A program written in C that catches registered signals.  The program prints its PID inorder to know which PID to send the signals to. When the program catches the registered signals, it writes particular information onto stdout - mainly the signal name and the epoch time. After catching three SIGTERMS in a row, the program exits.

====================================================

USAGE & SAMPLE OUTPUT:

In one terminal run
$ ./catcher <signal1> <signal2> ... <signaln>

In another terminal
$ kill -<signal1> <PID>

In one terminal
$ ./catcher TERM USR1 USR2
./catcher: 	$$ = 6793
USR1 caught at time 1411702115
TERM caught at time 1411702126
USR2 caught at time 1411702135
TERM caught at time 1411702145
TERM caught at time 1411702147
TERM caught at time 1411702148
./catcher: Total signals caught = 6
$

In another terminal the signals sent
$ kill -USR1 6427
$ kill -USR2 6427
$ kill -TERM 6427
$ kill -TERM 6427
$ kill -TERM 6427
$ kill -TERM 6427
$ kill -TERM 6427

====================================================

CHANGELOG:
v0.2.6
Edit the make file.

v0.2.5
Added error checking for the loop end.

v0.2.4
Removed the need for a global variable along with the accessor and mutator functions. (Java habit)
Edited void sig_number2name(char*, int) to char* sig_number2name(int)

v0.2.3
Hopefully no more issues and e-mail spam
fixed: int main(char argc, char* argv[])
to int main(int argc, char* argv[])

v0.2.2
Remove a time_t instance, redundant.

v0.2.1
Add error checking as suggested by Prof. Fitzgerald:
A signal that is not defined in the sig_name2number(int) function is ignored via SIG_IGN

v0.2
Program is now complete. Don't know if the use of the global variable is frowned upon but it was the best way I could think of to terminate the pause loop and print the desired output.

v0.1.1
Program now registers the interrupts and prints.

v0.1
Initial commit - Just getting started.

====================================================

LICENSE:

See LICENSE

====================================================